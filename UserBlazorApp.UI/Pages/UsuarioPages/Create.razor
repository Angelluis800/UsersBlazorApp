@page "/Usuario/Create"

@inject IClientService<AspNetUsers> userService
@inject IClientService<AspNetRoles> roleService
@inject NavigationManager Navigation

<PageTitle>Usuario Create</PageTitle>
<EditForm Model="Usuario" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            @*Header*@
            <div class="card-header bg-primary text-white text-center">
                <h3><strong>Crear usuario</strong></h3>
            </div>
            @*Body*@
            <div class="card-body">
                <div class="row">
                    <div class="col-1">
                        @*ID*@
                        <label class="form-label" for="id"><strong>Id</strong></label>
                        <InputNumber class="form-control" id="id" @bind-Value="Usuario.Id"></InputNumber>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-3">
                        @*UserName*@
                        <label class="form-label" for="userName"><strong>UserName</strong></label>
                        <InputText class="form-control" id="userName" @bind-Value="Usuario.UserName"></InputText>
                        <ValidationMessage For="@(() => Usuario.UserName)" />
                    </div>
                    <div class="col-4">
                        @*Email*@
                        <label class="form-label" for="email"><strong>Email</strong></label>
                        <InputText class="form-control" id="email" @bind-Value="Usuario.Email"></InputText>
                        <ValidationMessage For="@(() => Usuario.Email)" />
                    </div>
                    @*PasswordHash*@
                    <div class="col-3">
                        <label class="form-label" for="passwordHash"><strong>PasswordHash</strong></label>
                        <InputText class="form-control" id="passwordHash" @bind-Value="Usuario.PasswordHash"></InputText>
                    </div>
                    @*PhoneNumber*@
                    <div class="col-3">
                        <label class="form-label" for="phoneNumber"><strong>PhoneNumber</strong></label>
                        <InputText class="form-control" id="phoneNumber" @bind-Value="Usuario.PhoneNumber"></InputText>
                    </div>
                    @*LockoutEnd*@
                    <div class="col-3">
                        <label class="form-label" for="lockoutEnd"><strong>LockoutEnd</strong></label>
                        <InputDate class="form-control" id="lockoutEnd" @bind-Value="Usuario.LockoutEnd"></InputDate>
                    </div>
                    <div class="col-3">
                        <label class="form-label" for="roles"><strong>Roles</strong></label>
                        <InputSelect class="form-control" id="roles" @bind-Value="SelectedRoleId">
                            <option value="">Seleccione un rol</option>
                            @foreach (var role in Roles)
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </InputSelect>
                    </div>
                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-outline-secondary ms-2" @onclick="Volver"> Volver</button>
                <button type="submit" class="btn btn-outline-primary ms-2">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@Mensaje

@code {
    public AspNetUsers Usuario { get; set; } = new AspNetUsers();
    public string Mensaje { get; set; } = string.Empty;
    public List<AspNetRoles> Roles { get; set; } = new List<AspNetRoles>();
    public int SelectedRoleId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Roles = (await roleService.GetAllAsync()).ToList();
    }

    public async Task Guardar()
    {
        if (SelectedRoleId != 0)
        {
            var selectedRole = Roles.FirstOrDefault(r => r.Id == SelectedRoleId);
            if (selectedRole != null)
            {
                Usuario.Role.Add(selectedRole);
            }
        }

        var result = await userService.AddAsync(Usuario);

        if (result != null)
        {
            Mensaje = "Usuario creado correctamente";
            Usuario = new AspNetUsers();
        }
        else
        {
            Mensaje = "Error al crear el usuario";
        }
    }

    public void Volver()
    {
        Navigation.NavigateTo("/Usuario/Index");
    }
}
